name: CI/CD Pipeline for Production

on:
  push:
    branches:
      - production  

jobs:
  ensure-staging-completeness:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Set up Docker
      uses: docker/setup-buildx-action@v2

    - name: Cache Docker layers
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-docker-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-docker-

    - name: Run Tests and Checks
      run: |
        # Example command to run tests (replace with your test commands)
        npm install  # or pip install, etc.
        npm test     # or pytest, etc.
        # Additional checks can be added here

    - name: Build Docker Image
      run: |
        docker build -t ClayGrant/codeyou-devops-with-aws-final-project-saleor-full:production .

    - name: Log in to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Push Docker Image to DockerHub (production tag)
      run: |
        docker push ClayGrant/codeyou-devops-with-aws-final-project-saleor-full:production

    - name: Push Docker Image to DockerHub (latest tag)
      run: |
        docker tag ClayGrant/codeyou-devops-with-aws-final-project-saleor-full:production ClayGrant/codeyou-devops-with-aws-final-project-saleor-full:latest
        docker push ClayGrant/codeyou-devops-with-aws-final-project-saleor-full:latest

  aws-deployment:
    runs-on: ubuntu-latest
    needs: ensure-staging-completeness

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Set up AWS CLI
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        region: ${{ secrets.AWS_REGION }}

    # Deploy the Docker image to AWS (example for ECS)
    - name: Deploy to AWS (ECS, ECR, etc.)
      run: |

        docker pull ClayGrant/codeyou-devops-with-aws-final-project-saleor-full:latest
        #Example command to push to AWS ECR (assuming the AWS ECR repo exists)
        aws ecr create-repository --repository-name your-app-name --region ${{ secrets.AWS_REGION }} || echo "Repository already exists"
        docker tag your-dockerhub-username/your-app-name:latest ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/your-app-name:latest
        $(aws ecr get-login --no-include-email --region ${{ secrets.AWS_REGION }})
        docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/your-app-name:latest