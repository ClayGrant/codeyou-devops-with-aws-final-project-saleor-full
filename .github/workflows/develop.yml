name: Develop Branch CI/CD Pipeline

on:
  push:
    branches:
      - develop

jobs:
  lint:
    runs-on: ubuntu-latest
    name: Static Code Analysis with Flake8
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.9"
          
      - name: Install Dependencies
        run: |
          pip install flake8

      - name: Run flake8
        run: |
          flake8 . || echo "Linter failed but not blocking the pipeline"

  dependency_analysis:
    runs-on: ubuntu-latest
    name: Dependency Analysis with pip-audit
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.9"

      - name: Install pip-audit
        run: |
          pip install pip-audit

      - name: Run Dependency Audit
        run: |
          pip-audit --fail-on vulns || echo "Dependency audit failed but not blocking the pipeline"

  build_docker_images:
    runs-on: ubuntu-latest
    name: Build Docker Images
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build the Docker Images
        run: |
          docker build --no-cache -t ClayGrant/codeyou-devops-with-aws-final-project-saleor-full/saleor-api:develop ./saleor-api
          docker build --no-cache -t ClayGrant/codeyou-devops-with-aws-final-project-saleor-full/saleor-dashboard:develop ./saleor-dashboard

  health_check:
    runs-on: ubuntu-latest
    name: Run Health Check on Docker Container
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Run Docker Container
        run: |
          docker run -d --name AWSProduction -p 8000:8000 ClayGrant/codeyou-devops-with-aws-final-project-saleor-full/saleor-api:develop
          sleep 10 
          curl -f http://localhost:8000/graphql || echo "Health check failed but not blocking the pipeline"

  trivy_scan:
    runs-on: ubuntu-latest
    needs: build_docker_images
    steps:
      - name: Install Trivy
        run: |
          wget https://github.com/aquasecurity/trivy/releases/download/v0.35.0/trivy_0.35.0_Linux-64bit.deb
          sudo dpkg -i trivy_0.35.0_Linux-64bit.deb

      - name: Scan Docker image with Trivy
        run: |
          trivy image ${{ secrets.DOCKER_USERNAME }}/codeyou-devops-with-aws-final-project-saleor-full:develop

  push_to_dockerhub:
    runs-on: ubuntu-latest
    name: Push Docker Image to DockerHub
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker Image to DockerHub
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/codeyou-devops-with-aws-final-project-saleor-full:develop